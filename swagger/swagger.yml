swagger: "2.0"
info:
  title: Salud API
  description: Api para el módulo de Salud del proyecto SIBUD
  version: 1.0.0
  termsOfService: http://www.udistrital.edu.co/politicas-de-privacidad.pdf
  contact:
    email: baluist@correo.udistrital.edu.co
  license:
    name: BSD-3-Clause
    url: http://opensource.org/licenses/BSD-3-Clause
basePath: /v1
paths:
  /accesoHistoria/:
    get:
      tags:
      - accesoHistoria
      description: consulta todos los registros de la tabla AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoriaClinica'
        "403":
          description: ""
    post:
      tags:
      - accesoHistoria
      description: agregar un registro en la tabla AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de AccesoHistoriaClinica
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHistoriaClinica'
      responses:
        "201":
          description: '{int} models.AccesoHistoriaClinica'
        "403":
          description: Cuerpo Vacío
  /accesoHistoria/{id}:
    get:
      tags:
      - accesoHistoria
      description: consultar un registro de la tabla AccesoHistoriaClinica por su id
      operationId: AccesoHistoriaClinicaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoriaClinica'
        "403":
          description: :id está vacío
    put:
      tags:
      - accesoHistoria
      description: actualizar un registro de la tabla AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de AccesoHistoriaClinica
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHistoriaClinica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoriaClinica'
        "403":
          description: :id no es entero
    delete:
      tags:
      - accesoHistoria
      description: elimina un registro de la tabla AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaAntecedente/:
    get:
      tags:
      - medicinaAntecedente
      description: consulta todos los registros de la tabla MedicinaAntecedente
      operationId: MedicinaAntecedenteController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaAntecedente'
        "403":
          description: ""
    post:
      tags:
      - medicinaAntecedente
      description: agregar un registro en la tabla MedicinaAntecedente
      operationId: MedicinaAntecedenteController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaAntecedente'
      responses:
        "201":
          description: '{int} models.MedicinaAntecedente'
        "403":
          description: Cuerpo Vacío
  /medicinaAntecedente/{id}:
    get:
      tags:
      - medicinaAntecedente
      description: consultar un registro de la tabla MedicinaAntecedente por su id
      operationId: MedicinaAntecedenteController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaAntecedente'
        "403":
          description: :id  está vacío
    put:
      tags:
      - medicinaAntecedente
      description: actualizar un registro de la tabla MedicinaAntecedente
      operationId: MedicinaAntecedenteController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaAntecedente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaAntecedente'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaAntecedente
      description: elimina un registro de la tabla MedicinaAntecedente
      operationId: MedicinaAntecedenteController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaConsultaFisioterapia/:
    get:
      tags:
      - medicinaConsultaFisioterapia
      description: consulta todos los registros de la tabla MedicinaConsultaFisioterapia
      operationId: MedicinaConsultaFisioterapiaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaConsultaFisioterapia'
        "403":
          description: ""
    post:
      tags:
      - medicinaConsultaFisioterapia
      description: agregar un registro en la tabla MedicinaConsultaFisioterapia
      operationId: MedicinaConsultaFisioterapiaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaConsultaFisioterapia'
      responses:
        "201":
          description: '{int} models.MedicinaConsultaFisioterapia'
        "403":
          description: Cuerpo Vacío
  /medicinaConsultaFisioterapia/{id}:
    get:
      tags:
      - medicinaConsultaFisioterapia
      description: consultar un registro de la tabla MedicinaConsultaFisioterapia por su id
      operationId: MedicinaConsultaFisioterapiaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaConsultaFisioterapia'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaConsultaFisioterapia
      description: actualizar un registro de la tabla MedicinaConsultaFisioterapia
      operationId: MedicinaConsultaFisioterapiaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaConsultaFisioterapia'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaConsultaFisioterapia'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaConsultaFisioterapia
      description: elimina un registro de la tabla MedicinaConsultaFisioterapia
      operationId: MedicinaConsultaFisioterapiaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaDiagnostico/:
    get:
      tags:
      - medicinaDiagnostico
      description: consulta todos los registros de la tabla MedicinaDiagnostico
      operationId: MedicinaDiagnosticoController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaDiagnostico'
        "403":
          description: ""
    post:
      tags:
      - medicinaDiagnostico
      description: agregar un registro en la tabla MedicinaDiagnostico
      operationId: MedicinaDiagnosticoController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaDiagnostico'
      responses:
        "201":
          description: '{int} models.MedicinaDiagnostico'
        "403":
          description: Cuerpo Vacío
  /medicinaDiagnostico/{id}:
    get:
      tags:
      - medicinaDiagnostico
      description: consultar un registro de la tabla MedicinaDiagnostico por su id
      operationId: MedicinaDiagnosticoController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaDiagnostico'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaDiagnostico
      description: actualizar un registro de la tabla MedicinaDiagnostico
      operationId: MedicinaDiagnosticoController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaDiagnostico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaDiagnostico'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaDiagnostico
      description: elimina un registro de la tabla MedicinaDiagnostico
      operationId: MedicinaDiagnosticoController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaExamen/:
    get:
      tags:
      - medicinaExamen
      description: consulta todos los registros de la tabla MedicinaExamen
      operationId: MedicinaExamenController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaExamen'
        "403":
          description: ""
    post:
      tags:
      - medicinaExamen
      description: agregar un registro en la tabla MedicinaExamen
      operationId: MedicinaExamenController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaExamen'
      responses:
        "201":
          description: '{int} models.MedicinaExamen'
        "403":
          description: Cuerpo Vacío
  /medicinaExamen/{id}:
    get:
      tags:
      - medicinaExamen
      description: consultar un registro de la tabla MedicinaExamen por su id
      operationId: MedicinaExamenController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaExamen'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaExamen
      description: actualizar un registro de la tabla MedicinaExamen
      operationId: MedicinaExamenController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaExamen'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaExamen'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaExamen
      description: elimina un registro de la tabla MedicinaExamen
      operationId: MedicinaExamenController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaHistoriaClinica/:
    get:
      tags:
      - medicinaHistoriaClinica
      description: consulta todos los registros de la tabla MedicinaHistoriaClinica
      operationId: MedicinaHistoriaClinicaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaHistoriaClinica'
        "403":
          description: ""
    post:
      tags:
      - medicinaHistoriaClinica
      description: agregar un registro en la tabla MedicinaHistoriaClinica
      operationId: MedicinaHistoriaClinicaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaHistoriaClinica'
      responses:
        "201":
          description: '{int} models.MedicinaHistoriaClinica'
        "403":
          description: Cuerpo Vacío
  /medicinaHistoriaClinica/{id}:
    get:
      tags:
      - medicinaHistoriaClinica
      description: consultar un registro de la tabla MedicinaHistoriaClinica por su id
      operationId: MedicinaHistoriaClinicaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaHistoriaClinica'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaHistoriaClinica
      description: actualizar un registro de la tabla MedicinaHistoriaClinica
      operationId: MedicinaHistoriaClinicaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaHistoriaClinica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaHistoriaClinica'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaHistoriaClinica
      description: elimina un registro de la tabla MedicinaHistoriaClinica
      operationId: MedicinaHistoriaClinicaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaHojaHistoria/:
    get:
      tags:
      - medicinaHojaHistoria
      description: consulta todos los registros de la tabla MedicinaHojaHistoria
      operationId: MedicinaHojaHistoriaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaHojaHistoria'
        "403":
          description: ""
    post:
      tags:
      - medicinaHojaHistoria
      description: agregar un registro en la tabla MedicinaHojaHistoria
      operationId: MedicinaHojaHistoriaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaHojaHistoria'
      responses:
        "201":
          description: '{int} models.MedicinaHojaHistoria'
        "403":
          description: Cuerpo Vacío
  /medicinaHojaHistoria/{id}:
    get:
      tags:
      - medicinaHojaHistoria
      description: consultar un registro de la tabla MedicinaHojaHistoria por su id
      operationId: MedicinaHojaHistoriaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaHojaHistoria'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaHojaHistoria
      description: actualizar un registro de la tabla MedicinaHojaHistoria
      operationId: MedicinaHojaHistoriaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaConsultaFisioterapia
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaHojaHistoria'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaHojaHistoria'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaHojaHistoria
      description: elimina un registro de la tabla MedicinaHojaHistoria
      operationId: MedicinaHojaHistoriaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaSistemas/:
    get:
      tags:
      - medicinaSistemas
      description: consulta todos los registros de la tabla MedicinaSistemas
      operationId: MedicinaSistemasController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaSistemas'
        "403":
          description: ""
    post:
      tags:
      - medicinaSistemas
      description: agregar un registro en la tabla MedicinaSistemas
      operationId: MedicinaSistemasController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaSistemas
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaSistemas'
      responses:
        "201":
          description: '{int} models.MedicinaSistemas'
        "403":
          description: Cuerpo Vacío
  /medicinaSistemas/{id}:
    get:
      tags:
      - medicinaSistemas
      description: consultar un registro de la tabla MedicinaSistemas por su id
      operationId: MedicinaSistemasController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaSistemas'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaSistemas
      description: actualizar un registro de la tabla MedicinaSistemas
      operationId: MedicinaSistemasController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaSistemas
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaSistemas'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaSistemas'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaSistemas
      description: elimina un registro de la tabla MedicinaSistemas
      operationId: MedicinaSistemasController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaTipoAntecedente/:
    get:
      tags:
      - medicinaTipoAntecedente
      description: consulta todos los registros de la tabla MedicinaTipoAntecedente
      operationId: MedicinaTipoAntecedenteController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaTipoAntecedente'
        "403":
          description: ""
    post:
      tags:
      - medicinaTipoAntecedente
      description: agregar un registro en la tabla MedicinaTipoAntecedente
      operationId: MedicinaTipoAntecedenteController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaTipoAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaTipoAntecedente'
      responses:
        "201":
          description: '{int} models.MedicinaTipoAntecedente'
        "403":
          description: Cuerpo Vacío
  /medicinaTipoAntecedente/{id}:
    get:
      tags:
      - medicinaTipoAntecedente
      description: consultar un registro de la tabla MedicinaTipoAntecedente por su id
      operationId: MedicinaTipoAntecedenteController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaTipoAntecedente'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaTipoAntecedente
      description: actualizar un registro de la tabla MedicinaTipoAntecedente
      operationId: MedicinaTipoAntecedenteController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaTipoAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaTipoAntecedente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaTipoAntecedente'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaTipoAntecedente
      description: elimina un registro de la tabla MedicinaTipoAntecedente
      operationId: MedicinaTipoAntecedenteController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /medicinaTipoExamen/:
    get:
      tags:
      - medicinaTipoExamen
      description: consulta todos los registros de la tabla MedicinaTipoExamen
      operationId: MedicinaTipoExamenController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaTipoExamen'
        "403":
          description: ""
    post:
      tags:
      - medicinaTipoExamen
      description: agregar un registro en la tabla MedicinaTipoExamen
      operationId: MedicinaTipoExamenController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaTipoExamen
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaTipoExamen'
      responses:
        "201":
          description: '{int} models.MedicinaTipoExamen'
        "403":
          description: Cuerpo Vacío
  /medicinaTipoExamen/{id}:
    get:
      tags:
      - medicinaTipoExamen
      description: consultar un registro de la tabla MedicinaTipoExamen por su id
      operationId: MedicinaTipoExamenController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaTipoExamen'
        "403":
          description: :id está vacío
    put:
      tags:
      - medicinaTipoExamen
      description: actualizar un registro de la tabla MedicinaTipoExamen
      operationId: MedicinaTipoExamenController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de MedicinaTipoExamen
        required: true
        schema:
          $ref: '#/definitions/models.MedicinaTipoExamen'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MedicinaTipoExamen'
        "403":
          description: :id no es entero
    delete:
      tags:
      - medicinaTipoExamen
      description: elimina un registro de la tabla MedicinaTipoExamen
      operationId: MedicinaTipoExamenController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaAnamnesis/:
    get:
      tags:
      - odontologiaAnamnesis
      description: consulta todos los registros de la tabla OdontologiaAnamnesis
      operationId: OdontologiaAnamnesisController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaAnamnesis'
        "403":
          description: ""
    post:
      tags:
      - odontologiaAnamnesis
      description: agregar un registro en la tabla OdontologiaAnamnesis
      operationId: OdontologiaAnamnesisController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaAnamnesis
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaAnamnesis'
      responses:
        "201":
          description: '{int} models.OdontologiaAnamnesis'
        "403":
          description: Cuerpo Vacío
  /odontologiaAnamnesis/{id}:
    get:
      tags:
      - odontologiaAnamnesis
      description: consultar un registro de la tabla OdontologiaAnamnesis por su id
      operationId: OdontologiaAnamnesisController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaAnamnesis'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaAnamnesis
      description: actualizar un registro de la tabla OdontologiaAnamnesis
      operationId: OdontologiaAnamnesisController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaAnamnesis
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaAnamnesis'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaAnamnesis'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaAnamnesis
      description: elimina un registro de la tabla OdontologiaAnamnesis
      operationId: OdontologiaAnamnesisController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaControlPlaca/:
    get:
      tags:
      - odontologiaControlPlaca
      description: consulta todos los registros de la tabla OdontologiaControlPlaca
      operationId: OdontologiaControlPlacaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaControlPlaca'
        "403":
          description: ""
    post:
      tags:
      - odontologiaControlPlaca
      description: agregar un registro en la tabla OdontologiaControlPlaca
      operationId: OdontologiaControlPlacaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaControlPlaca
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaControlPlaca'
      responses:
        "201":
          description: '{int} models.OdontologiaControlPlaca'
        "403":
          description: Cuerpo Vacío
  /odontologiaControlPlaca/{id}:
    get:
      tags:
      - odontologiaControlPlaca
      description: consultar un registro de la tabla OdontologiaControlPlaca por su id
      operationId: OdontologiaControlPlacaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaControlPlaca'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaControlPlaca
      description: actualizar un registro de la tabla OdontologiaControlPlaca
      operationId: OdontologiaControlPlacaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaControlPlaca
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaControlPlaca'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaControlPlaca'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaControlPlaca
      description: elimina un registro de la tabla OdontologiaControlPlaca
      operationId: OdontologiaControlPlacaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaDiagnostico/:
    get:
      tags:
      - odontologiaDiagnostico
      description: consulta todos los registros de la tabla OdontologiaDiagnostico
      operationId: OdontologiaDiagnosticoController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaDiagnostico'
        "403":
          description: ""
    post:
      tags:
      - odontologiaDiagnostico
      description: agregar un registro en la tabla OdontologiaDiagnostico
      operationId: OdontologiaDiagnosticoController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaDiagnostico
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaDiagnostico'
      responses:
        "201":
          description: '{int} models.OdontologiaDiagnostico'
        "403":
          description: Cuerpo Vacío
  /odontologiaDiagnostico/{id}:
    get:
      tags:
      - odontologiaDiagnostico
      description: consultar un registro de la tabla OdontologiaDiagnostico por su id
      operationId: OdontologiaDiagnosticoController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaDiagnostico'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaDiagnostico
      description: actualizar un registro de la tabla OdontologiaDiagnostico
      operationId: OdontologiaDiagnosticoController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaDiagnostico
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaDiagnostico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaDiagnostico'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaDiagnostico
      description: elimina un registro de la tabla OdontologiaDiagnostico
      operationId: OdontologiaDiagnosticoController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaExamenDental/:
    get:
      tags:
      - odontologiaExamenDental
      description: consulta todos los registros de la tabla OdontologiaExamenDental
      operationId: OdontologiaExamenDentalController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenDental'
        "403":
          description: ""
    post:
      tags:
      - odontologiaExamenDental
      description: agregar un registro en la tabla OdontologiaExamenDental
      operationId: OdontologiaExamenDentalController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaExamenDental
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaExamenDental'
      responses:
        "201":
          description: '{int} models.OdontologiaExamenDental'
        "403":
          description: Cuerpo Vacío
  /odontologiaExamenDental/{id}:
    get:
      tags:
      - odontologiaExamenDental
      description: consultar un registro de la tabla OdontologiaExamenDental por su id
      operationId: OdontologiaExamenDentalController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenDental'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaExamenDental
      description: actualizar un registro de la tabla OdontologiaExamenDental
      operationId: OdontologiaExamenDentalController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaExamenDental
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaExamenDental'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenDental'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaExamenDental
      description: elimina un registro de la tabla OdontologiaExamenDental
      operationId: OdontologiaExamenDentalController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaExamenEstomatologico/:
    get:
      tags:
      - odontologiaExamenEstomatologico
      description: consulta todos los registros de la tabla OdontologiaExamenEstomatologico
      operationId: OdontologiaExamenEstomatologicoController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenEstomatologico'
        "403":
          description: ""
    post:
      tags:
      - odontologiaExamenEstomatologico
      description: agregar un registro en la tabla OdontologiaExamenEstomatologico
      operationId: OdontologiaExamenEstomatologicoController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaExamenEstomatologico
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaExamenEstomatologico'
      responses:
        "201":
          description: '{int} models.OdontologiaExamenEstomatologico'
        "403":
          description: Cuerpo Vacío
  /odontologiaExamenEstomatologico/{id}:
    get:
      tags:
      - odontologiaExamenEstomatologico
      description: consultar un registro de la tabla OdontologiaExamenEstomatologico por su id
      operationId: OdontologiaExamenEstomatologicoController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenEstomatologico'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaExamenEstomatologico
      description: actualizar un registro de la tabla OdontologiaExamenEstomatologico
      operationId: OdontologiaExamenEstomatologicoController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaExamenEstomatologico
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaExamenEstomatologico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenEstomatologico'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaExamenEstomatologico
      description: elimina un registro de la tabla OdontologiaExamenEstomatologico
      operationId: OdontologiaExamenEstomatologicoController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaExamenesComplementarios/:
    get:
      tags:
      - odontologiaExamenesComplementarios
      description: consulta todos los registros de la tabla OdontologiaExamenesComplementarios
      operationId: OdontologiaExamenesComplementariosController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenesComplementarios'
        "403":
          description: ""
    post:
      tags:
      - odontologiaExamenesComplementarios
      description: agregar un registro en la tabla OdontologiaExamenesComplementarios
      operationId: OdontologiaExamenesComplementariosController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaExamenesComplementarios
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaExamenesComplementarios'
      responses:
        "201":
          description: '{int} models.OdontologiaExamenesComplementarios'
        "403":
          description: Cuerpo Vacío
  /odontologiaExamenesComplementarios/{id}:
    get:
      tags:
      - odontologiaExamenesComplementarios
      description: consultar un registro de la tabla OdontologiaExamenesComplementarios por su id
      operationId: OdontologiaExamenesComplementariosController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenesComplementarios'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaExamenesComplementarios
      description: actualizar un registro de la tabla OdontologiaExamenesComplementarios
      operationId: OdontologiaExamenesComplementariosController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaExamenesComplementarios
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaExamenesComplementarios'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaExamenesComplementarios'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaExamenesComplementarios
      description: elimina un registro de la tabla OdontologiaExamenesComplementarios
      operationId: OdontologiaExamenesComplementariosController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaOdontograma/:
    get:
      tags:
      - odontologiaOdontograma
      description: consulta todos los registros de la tabla OdontologiaOdontograma
      operationId: OdontologiaOdontogramaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaOdontograma'
        "403":
          description: ""
    post:
      tags:
      - odontologiaOdontograma
      description: agregar un registro en la tabla OdontologiaOdontograma
      operationId: OdontologiaOdontogramaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaOdontograma
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHOdontologiaOdontogramaistoriaClinica'
      responses:
        "201":
          description: '{int} models.OdontologiaOdontograma'
        "403":
          description: Cuerpo Vacío
  /odontologiaOdontograma/{id}:
    get:
      tags:
      - odontologiaOdontograma
      description: consultar un registro de la tabla OdontologiaOdontograma por su id
      operationId: OdontologiaOdontogramaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaOdontograma'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaOdontograma
      description: actualizar un registro de la tabla OdontologiaOdontograma
      operationId: OdontologiaOdontogramaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaOdontograma
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaOdontograma'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaOdontograma'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaOdontograma
      description: elimina un registro de la tabla OdontologiaOdontograma
      operationId: OdontologiaOdontogramaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /odontologiaTipoOdontograma/:
    get:
      tags:
      - odontologiaTipoOdontograma
      description: consulta todos los registros de la tabla OdontologiaTipoOdontograma
      operationId: OdontologiaTipoOdontogramaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaTipoOdontograma'
        "403":
          description: ""
    post:
      tags:
      - odontologiaTipoOdontograma
      description: agregar un registro en la tabla OdontologiaTipoOdontograma
      operationId: OdontologiaTipoOdontogramaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de OdontologiaTipoOdontograma
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaTipoOdontograma'
      responses:
        "201":
          description: '{int} models.OdontologiaTipoOdontograma'
        "403":
          description: Cuerpo Vacío
  /odontologiaTipoOdontograma/{id}:
    get:
      tags:
      - odontologiaTipoOdontograma
      description: consultar un registro de la tabla OdontologiaTipoOdontograma por su id
      operationId: OdontologiaTipoOdontogramaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaTipoOdontograma'
        "403":
          description: :id está vacío
    put:
      tags:
      - odontologiaTipoOdontograma
      description: actualizar un registro de la tabla OdontologiaTipoOdontograma
      operationId: OdontologiaTipoOdontogramaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de AccesoHistoriaClinica
        required: true
        schema:
          $ref: '#/definitions/models.OdontologiaTipoOdontograma'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OdontologiaTipoOdontograma'
        "403":
          description: :id no es entero
    delete:
      tags:
      - odontologiaTipoOdontograma
      description: elimina un registro de la tabla OdontologiaTipoOdontograma
      operationId: OdontologiaTipoOdontogramaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /psicologiaAntecedente/:
    get:
      tags:
      - psicologiaAntecedente
      description: consulta todos los registros de la tabla PsicologiaAntecedente
      operationId: PsicologiaAntecedenteController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PsicologiaAntecedente'
        "403":
          description: ""
    post:
      tags:
      - psicologiaAntecedente
      description: agregar un registro en la tabla PsicologiaAntecedente
      operationId: PsicologiaAntecedenteController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de PsicologiaAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.PsicologiaAntecedente'
      responses:
        "201":
          description: '{int} models.PsicologiaAntecedente'
        "403":
          description: Cuerpo Vacío
  /psicologiaAntecedente/{id}:
    get:
      tags:
      - psicologiaAntecedente
      description: consultar un registro de la tabla PsicologiaAntecedente por su id
      operationId: PsicologiaAntecedenteController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PsicologiaAntecedente'
        "403":
          description: :id está vacío
    put:
      tags:
      - psicologiaAntecedente
      description: actualizar un registro de la tabla PsicologiaAntecedente
      operationId: PsicologiaAntecedenteController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de PsicologiaAntecedente
        required: true
        schema:
          $ref: '#/definitions/models.PsicologiaAntecedente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PsicologiaAntecedente'
        "403":
          description: :id no es entero
    delete:
      tags:
      - psicologiaAntecedente
      description: elimina un registro de la tabla PsicologiaAntecedente
      operationId: PsicologiaAntecedenteController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
  /psicologiaComportamientoConsulta/:
    get:
      tags:
      - psicologiaComportamientoConsulta
      description: consulta todos los registros de la tabla PsicologiaComportamientoConsulta
      operationId: PsicologiaComportamientoConsultaController.Get All
      parameters:
      - in: consulta
        name: query
        description: 'Filtro. Por ejemplo, col1: v1, col2: v2 ...'
        type: string
      - in: consulta
        name: fields
        description: Campos devueltos. Por ejemplo, col1, col2 ...
        type: string
      - in: consulta
        name: sortby
        description: Campos ordenados por. Por ejemplo, Col1, col2 ...
        type: string
      - in: consulta
        name: order
        description: El orden correspondiente a cada campo de clasificación, si es un valor único, se aplica a todos los campos de clasificación. Por ejemplo, desc, asc ...
        type: string
      - in: consulta
        name: limit
        description: Limite el tamaño del conjunto de resultados. Debe ser un número entero
        type: string
      - in: consulta
        name: offset
        description: Posición inicial del conjunto de resultados. Debe ser un número entero
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PsicologiaComportamientoConsulta'
        "403":
          description: ""
    post:
      tags:
      - psicologiaComportamientoConsulta
      description: agregar un registro en la tabla PsicologiaComportamientoConsulta
      operationId: PsicologiaComportamientoConsultaController.Post
      parameters:
      - in: body
        name: body
        description: Cuerpo para el contenido de PsicologiaComportamientoConsulta
        required: true
        schema:
          $ref: '#/definitions/models.PsicologiaComportamientoConsulta'
      responses:
        "201":
          description: '{int} models.PsicologiaComportamientoConsulta'
        "403":
          description: Cuerpo Vacío
  /psicologiaComportamientoConsulta/{id}:
    get:
      tags:
      - psicologiaComportamientoConsulta
      description: consultar un registro de la tabla PsicologiaComportamientoConsulta por su id
      operationId: PsicologiaComportamientoConsultaController.Get One
      parameters:
      - in: path
        name: id
        description: Id a consultar
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PsicologiaComportamientoConsulta'
        "403":
          description: :id está vacío
    put:
      tags:
      - psicologiaComportamientoConsulta
      description: actualizar un registro de la tabla PsicologiaComportamientoConsulta
      operationId: PsicologiaComportamientoConsultaController.Put
      parameters:
      - in: path
        name: id
        description: Id del registro a actualizar
        required: true
        type: string
      - in: body
        name: body
        description: Cuerpo para el contenido de PsicologiaComportamientoConsulta
        required: true
        schema:
          $ref: '#/definitions/models.PsicologiaComportamientoConsulta'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PsicologiaComportamientoConsulta'
        "403":
          description: :id no es entero
    delete:
      tags:
      - psicologiaComportamientoConsulta
      description: elimina un registro de la tabla PsicologiaComportamientoConsulta
      operationId: PsicologiaComportamientoConsultaController.Delete
      parameters:
      - in: path
        name: id
        description: Id del registro a eliminar
        required: true
        type: string
      responses:
        "200":
          description: '{string} borrado exitoso!'
        "403":
          description: Id vacío
definitions:
  models.AccesoHOdontologiaOdontogramaistoriaClinica:
    title: AccesoHOdontologiaOdontogramaistoriaClinica
    type: object
  models.AccesoHistoriaClinica:
    title: AccesoHistoriaClinica
    type: object
    properties:
      FechaAcceso:
        type: string
        format: datetime
      IdAccesoHistoria:
        type: integer
        format: int64
      IdHistoriaClinica:
        $ref: '#/definitions/models.MedicinaHistoriaClinica'
      ProfesionaId:
        type: integer
        format: int64
  models.MedicinaAntecedente:
    title: MedicinaAntecedente
    type: object
    properties:
      IdHistoriaClinica:
        $ref: '#/definitions/models.MedicinaHistoriaClinica'
      IdMedicinaAntecedente:
        type: integer
        format: int64
      IdTipoAntecedente:
        $ref: '#/definitions/models.MedicinaTipoAntecedente'
      Observaciones:
        type: string
  models.MedicinaConsultaFisioterapia:
    title: MedicinaConsultaFisioterapia
    type: object
    properties:
      Evolucion:
        type: string
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      IdMedicinaConsultaFisioterapia:
        type: integer
        format: int64
      Motivo_consulta:
        type: string
      Observaciones:
        type: string
      PlanManejo:
        type: string
      Valoracion:
        type: string
  models.MedicinaDiagnostico:
    title: MedicinaDiagnostico
    type: object
    properties:
      Activo:
        type: boolean
      Analisis:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      IdDiagnosticoMedicina:
        type: integer
        format: int64
      Nombre:
        type: string
      Numero:
        type: integer
        format: int64
      PlanManejo:
        type: string
  models.MedicinaExamen:
    title: MedicinaExamen
    type: object
    properties:
      FechaExamen:
        type: string
        format: datetime
      IdExamen:
        type: integer
        format: int64
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      IdTipoExamen:
        $ref: '#/definitions/models.MedicinaTipoExamen'
      Nombre:
        type: string
      Observacion:
        type: string
  models.MedicinaHistoriaClinica:
    title: MedicinaHistoriaClinica
    type: object
    properties:
      IdHistoriaClinica:
        type: integer
        format: int64
      IdTercero:
        type: integer
        format: int64
  models.MedicinaHojaHistoria:
    title: MedicinaHojaHistoria
    type: object
    properties:
      Evolucion:
        type: string
      FechaConsulta:
        type: string
        format: datetime
      IdDiagnostico:
        $ref: '#/definitions/models.MedicinaDiagnostico'
      IdEspecialidad:
        type: integer
        format: int64
      IdHistoriaClinica:
        $ref: '#/definitions/models.MedicinaHistoriaClinica'
      IdHojaHistoria:
        type: integer
        format: int64
      IdPersona:
        type: integer
        format: int64
      IdProfesional:
        type: integer
        format: int64
      Motivo:
        type: string
      Observacion:
        type: string
  models.MedicinaSistemas:
    title: MedicinaSistemas
    type: object
    properties:
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      IdSistema:
        type: integer
        format: int64
      NombreSistema:
        type: string
      Observacion:
        type: string
  models.MedicinaTipoAntecedente:
    title: MedicinaTipoAntecedente
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      IdTipoAntecedente:
        type: integer
        format: int64
      Nombre:
        type: string
  models.MedicinaTipoExamen:
    title: MedicinaTipoExamen
    type: object
    properties:
      IdTipoExamen:
        type: integer
        format: int64
      Nombre:
        type: string
  models.OdontologiaAnamnesis:
    title: OdontologiaAnamnesis
    type: object
    properties:
      Alergias:
        type: string
      AntecedenteFamiliar:
        type: string
      Cardiopatias:
        type: string
      Ceda:
        type: string
      Cepillado:
        type: string
      Chicle:
        type: string
      Diabetes:
        type: string
      Dulces:
        type: string
      EnfermedadRespiratoria:
        type: string
      Enjuague:
        type: string
      FiebreReumatica:
        type: string
      Fuma:
        type: string
      Hemorragias:
        type: string
      Hepatitis:
        type: string
      Hipertension:
        type: string
      IdHistoriaClinica:
        $ref: '#/definitions/models.MedicinaHistoriaClinica'
      IdOdontologiaAnamnesis:
        type: integer
        format: int64
      Irradiaciones:
        type: string
      Medicamentos:
        type: string
      Otras:
        type: string
      Sinusitis:
        type: string
      Tratamiento:
        type: string
      UltimaVisita:
        type: string
        format: datetime
  models.OdontologiaControlPlaca:
    title: OdontologiaControlPlaca
    type: object
    properties:
      Fecha:
        type: string
        format: datetime
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      IdTipoOdontograma:
        $ref: '#/definitions/models.OdontologiaTipoOdontograma'
      IdcontrolPlaca:
        type: integer
        format: int64
      IndiceActual:
        type: integer
        format: int64
      IndiceAnterior:
        type: integer
        format: int64
      Observaciones:
        type: string
      Vestibulares:
        type: string
  models.OdontologiaDiagnostico:
    title: OdontologiaDiagnostico
    type: object
    properties:
      Diagnostivo:
        type: string
      Evolucion:
        type: string
      IdDiagnostico:
        type: integer
        format: int64
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      Observaciones:
        type: string
      Pronostico:
        type: string
  models.OdontologiaExamenDental:
    title: OdontologiaExamenDental
    type: object
    properties:
      Abrasion:
        type: string
      IdExamenDental:
        type: integer
        format: int64
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      Manchas:
        type: string
      Observaciones:
        type: string
      Oclusion:
        type: string
      Otros:
        type: string
      PatologiaPulpar:
        type: string
      PlacaBlanda:
        type: string
      PlacaCalcificada:
        type: string
      Supernumerarios:
        type: string
  models.OdontologiaExamenEstomatologico:
    title: OdontologiaExamenEstomatologico
    type: object
    properties:
      ArticulacionTemporo:
        type: string
      Carrillos:
        type: string
      GlandulasSalivares:
        type: string
      IdExamenEstomatologico:
        type: integer
        format: int64
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      Labios:
        type: string
      Lengua:
        type: string
      Maxilares:
        type: string
      MusculosMasticadores:
        type: string
      Observaciones:
        type: string
      Paladar:
        type: string
      PisoBoca:
        type: string
      SenosMaxilares:
        type: string
      SistemaLinfatico:
        type: string
      SistemaMuscular:
        type: string
      SistemaNervioso:
        type: string
      SistemaRegional:
        type: string
  models.OdontologiaExamenesComplementarios:
    title: OdontologiaExamenesComplementarios
    type: object
    properties:
      Coagulacion:
        type: string
      IdExamenesComplementarios:
        type: integer
        format: int64
      IdHojaHistoria:
        type: integer
        format: int64
      LaboratorioFinal:
        type: string
        format: byte
      LaboratorioInicio:
        type: string
        format: byte
      Otra:
        type: string
      OtraFinal:
        type: string
        format: byte
      OtraInicio:
        type: string
        format: byte
      PanoramicaInicio:
        type: string
        format: byte
      PeriapicalFinal:
        type: string
        format: byte
      PeriapicalInicio:
        type: integer
        format: int64
      Sangria:
        type: string
      Tp:
        type: string
      Tpt:
        type: string
  models.OdontologiaOdontograma:
    title: OdontologiaOdontograma
    type: object
    properties:
      Diagrama:
        type: string
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      IdOdontograma:
        type: integer
        format: int64
      IdTipoOdontograma:
        $ref: '#/definitions/models.OdontologiaTipoOdontograma'
      Observaciones:
        type: string
  models.OdontologiaTipoOdontograma:
    title: OdontologiaTipoOdontograma
    type: object
    properties:
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      IdTipoOdontograma:
        type: integer
        format: int64
      Nombre:
        type: string
  models.PsicologiaAntecedente:
    title: PsicologiaAntecedente
    type: object
    properties:
      Actual_somatico:
        type: string
      IdHistoriaClinica:
        $ref: '#/definitions/models.MedicinaHistoriaClinica'
      IdPsicologiaAntecedente:
        type: integer
        format: int64
      IdTipoAntecedentePsicologico:
        $ref: '#/definitions/models.PsicologiaTipoAntecedente'
      Pasado_somatico:
        type: string
  models.PsicologiaComportamientoConsulta:
    title: PsicologiaComportamientoConsulta
    type: object
    properties:
      Afrontamiento:
        type: string
      IdComportamientoConsulta:
        type: integer
        format: int64
      IdHojaHistoria:
        $ref: '#/definitions/models.MedicinaHojaHistoria'
      Problematica:
        type: string
  models.PsicologiaTipoAntecedente:
    title: PsicologiaTipoAntecedente
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      FechaCreacion:
        type: string
        format: datetime
      FechaModificacion:
        type: string
        format: datetime
      IdTipoAntecedentePsicologico:
        type: integer
        format: int64
      Nombre:
        type: string
