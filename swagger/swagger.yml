swagger: "2.0"
info:
  title: Salud API
  description: Api para el m√≥dulo de Salud del proyecto SIBUD
  version: 1.0.0
  contact:
    email: baluist@correo.udistrital.edu.co  - ddromeroq@correo.udistrital.edu.co
basePath: /v1
paths:
  /accesoHistoria/:
    get:
      tags:
      - accesoHistoria
      description: get AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoriaClinica'
        "403":
          description: ""
    post:
      tags:
      - accesoHistoria
      description: create AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Post
      parameters:
      - in: body
        name: body
        description: body for AccesoHistoriaClinica content
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHistoriaClinica'
      responses:
        "201":
          description: '{int} models.AccesoHistoriaClinica'
        "403":
          description: body is empty
  /accesoHistoria/{id}:
    get:
      tags:
      - accesoHistoria
      description: get AccesoHistoriaClinica by id
      operationId: AccesoHistoriaClinicaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoriaClinica'
        "403":
          description: :id is empty
    put:
      tags:
      - accesoHistoria
      description: update the AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AccesoHistoriaClinica content
        required: true
        schema:
          $ref: '#/definitions/models.AccesoHistoriaClinica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AccesoHistoriaClinica'
        "403":
          description: :id is not int
    delete:
      tags:
      - accesoHistoria
      description: delete the AccesoHistoriaClinica
      operationId: AccesoHistoriaClinicaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /prueba/:
    get:
      tags:
      - prueba
      description: get Prueba
      operationId: PruebaController.Get All
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Prueba'
        "403":
          description: ""
    post:
      tags:
      - prueba
      description: create Prueba
      operationId: PruebaController.Post
      parameters:
      - in: body
        name: body
        description: body for Prueba content
        required: true
        schema:
          $ref: '#/definitions/models.Prueba'
      responses:
        "201":
          description: '{int} models.Prueba'
        "403":
          description: body is empty
  /prueba/GetA:
    get:
      tags:
      - prueba
      description: GetA
      operationId: PruebaController.GetA
      parameters:
      - in: path
        name: nombre
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Prueba'
        "403":
          description: ""
  /usuario/:
    get:
      tags:
      - usuario
      description: get Usuario
      operationId: UsuarioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Usuario'
        "403":
          description: ""
    post:
      tags:
      - usuario
      description: create Usuario
      operationId: UsuarioController.Post
      parameters:
      - in: body
        name: body
        description: body for Usuario content
        required: true
        schema:
          $ref: '#/definitions/models.Usuario'
      responses:
        "201":
          description: '{int} models.Usuario'
        "403":
          description: body is empty
  /usuario/{id}:
    get:
      tags:
      - usuario
      description: get Usuario by id
      operationId: UsuarioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Usuario'
        "403":
          description: :id is empty
    put:
      tags:
      - usuario
      description: update the Usuario
      operationId: UsuarioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Usuario content
        required: true
        schema:
          $ref: '#/definitions/models.Usuario'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Usuario'
        "403":
          description: :id is not int
    delete:
      tags:
      - usuario
      description: delete the Usuario
      operationId: UsuarioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.AccesoHistoriaClinica:
    title: AccesoHistoriaClinica
    type: object
    properties:
      IdAccesoHistoria:
        type: integer
        format: int64
      fecha_acceso:
        type: string
        format: datetime
      id_historia_clinica:
        type: integer
        format: int64
      profesional_id:
        type: integer
        format: int64
  models.Prueba:
    title: Prueba
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.Usuario:
    title: Usuario
    type: object
    properties:
      Apellido:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
tags:
- name: usuario
  description: |
    UsuarioController operations for Usuario
- name: prueba
  description: |
    PruebaController ...
